apiVersion: v1
data:
  Dockerfile: "FROM node as builder\n\nCOPY ui /ui\nWORKDIR /ui\nRUN npm install\nRUN
    npm run build\n\n\nFROM nginx:1.21\n\nUSER root\nRUN ln -sf /init/nginx.conf /etc/nginx/nginx.conf\nRUN
    ln -sf /dev/stdout /var/log/nginx/access.log && \\\n    ln -sf /dev/stderr /var/log/nginx/error.log
    && \\\n\tln -sf /init/http.conf /etc/nginx/conf.d/ && \\\n\tln -sf /init/tls-dockercompose.conf
    /etc/nginx/conf.d/ && \\\n\tln -sf /init/tls-k8s.conf /etc/nginx/conf.d/\nRUN
    /usr/bin/apt-get update && \\\n    /usr/bin/apt-get install -yq --no-install-recommends
    dumb-init && \\\n\trm -rf /var/lib/apt/lists/*\nCOPY --from=builder /ui/dist /app\nCOPY
    init /init\nEXPOSE 80\nEXPOSE 443\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"/bin/bash\",
    \"/docker-entrypoint.sh\", \"/init/start_nginx.sh\"]\n"
kind: ConfigMap
metadata:
  creationTimestamp: "2021-07-26T07:10:06Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:Dockerfile: {}
    manager: kubectl-create
    operation: Update
    time: "2021-07-26T07:10:06Z"
  name: uiserver
  namespace: default
  resourceVersion: "1546218"
  uid: 87be1fb9-3d88-43a8-bfc9-9716bedbae88
